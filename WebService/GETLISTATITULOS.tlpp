#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "protheus.ch"
#include "tbiconn.ch"
#include "topconn.ch"

// Declaração da namespace
Namespace ListaTitulosSE1

@Get("/GETLISTATITULOS")
User function getListaTitulos()
    local oJson        := JsonObject():New() as object
    local aArea        := FwGetArea() as array
    local jPath        as json
    local cWhere       as character
    local E1_FILIAL    as character
    local E1_PREFIXO   as character
    local E1_NUM       as character
    local E1_PARCELA   as character
    local E1_TIPO      as character
    local E1_NATUREZ   as character
    local E1_CLIENTE   as character
    local E1_LOJA      as character
    local E1_EMISSAO   as character
    local E1_VENCREA   as character
    local E1_VALOR     as character
    local E1_NOMCLI    as character

    jPath := oRest:getQueryRequest()
    // Inicializa variáveis dos parâmetros
    if jPath <> Nil
        if ValType(jPath["E1_FILIAL"]) == "C" .and. !Empty(jPath["E1_FILIAL"])
            E1_FILIAL := jPath["E1_FILIAL"]
        endif
        if ValType(jPath["E1_PREFIXO"]) == "C" .and. !Empty(jPath["E1_PREFIXO"])
            E1_PREFIXO := jPath["E1_PREFIXO"]
        endif
        if ValType(jPath["E1_NUM"]) == "C" .and. !Empty(jPath["E1_NUM"])
            E1_NUM := jPath["E1_NUM"]
        endif
        if ValType(jPath["E1_PARCELA"]) == "C" .and. !Empty(jPath["E1_PARCELA"])
            E1_PARCELA := jPath["E1_PARCELA"]
        endif
        if ValType(jPath["E1_TIPO"]) == "C" .and. !Empty(jPath["E1_TIPO"])
            E1_TIPO := jPath["E1_TIPO"]
        endif
        if ValType(jPath["E1_NATUREZ"]) == "C" .and. !Empty(jPath["E1_NATUREZ"])
            E1_NATUREZ := jPath["E1_NATUREZ"]
        endif
        if ValType(jPath["E1_CLIENTE"]) == "C" .and. !Empty(jPath["E1_CLIENTE"])
            E1_CLIENTE := jPath["E1_CLIENTE"]
        endif
        if ValType(jPath["E1_LOJA"]) == "C" .and. !Empty(jPath["E1_LOJA"])
            E1_LOJA := jPath["E1_LOJA"]
        endif
        if ValType(jPath["E1_EMISSAO"]) == "C" .and. !Empty(jPath["E1_EMISSAO"])
            E1_EMISSAO := jPath["E1_EMISSAO"]
        endif
        if ValType(jPath["E1_VENCREA"]) == "C" .and. !Empty(jPath["E1_VENCREA"])
            E1_VENCREA := jPath["E1_VENCREA"]
        endif
        if ValType(jPath["E1_VALOR"]) == "C" .and. !Empty(jPath["E1_VALOR"])
            E1_VALOR := jPath["E1_VALOR"]
        endif
        if ValType(jPath["E1_NOMCLI"]) == "C" .and. !Empty(jPath["E1_NOMCLI"])
            E1_NOMCLI := jPath["E1_NOMCLI"]
        endif
    endif

    ConOut( "[ListaTitulos] INICIO DA ROTINA")

   // Filtros simples -- Filtro de busca dos títulos
    if !Empty(E1_FILIAL)
        cWhere += "AND SE1.E1_FILIAL = " + ValToSql(E1_FILIAL) + ""
    endif
    if !Empty(E1_NUM)
        cWhere += " AND SE1.E1_NUM = " + ValToSql(E1_NUM) + ""
    endif
    if !Empty(E1_CLIENTE)
        cWhere += " AND SE1.E1_CLIENTE = " + ValToSql(E1_CLIENTE) + ""
    endif
    if !Empty(E1_EMISSAO)
        cWhere += " AND SE1.E1_EMISSAO >= " + ValToSql(E1_EMISSAO) + ""
    endif
    if !Empty(E1_VENCREA)
        cWhere += " AND SE1.E1_VENCREA <= " + ValToSql(E1_VENCREA) + ""
    endif
    if !Empty(E1_PREFIXO)
        cWhere += " AND SE1.E1_PREFIXO = " + ValToSql(E1_PREFIXO) + ""
    endif
    if !Empty(E1_TIPO)
        cWhere += " AND SE1.E1_TIPO = " + ValToSql(E1_TIPO) + ""
    endif
    if !Empty(E1_PARCELA)
        cWhere += " AND SE1.E1_PARCELA = " + ValToSql(E1_PARCELA) + ""
    endif
    if !Empty(E1_LOJA)
        cWhere += " AND SE1.E1_LOJA = " + ValToSql(E1_LOJA) + ""
    endif
    if !Empty(E1_NATUREZ)
        cWhere += " AND SE1.E1_NATUREZ = " + ValToSql(E1_NATUREZ) + ""
    endif
    if !Empty(E1_NOMCLI)
        cWhere += " AND SE1.E1_NOMCLI LIKE " + AllTrim(E1_NOMCLI) + ""
    endif
    if !Empty(E1_VALOR)
        cWhere += " AND SE1.E1_VALOR = " + ValToSql(E1_VALOR) + ""
    endif

    //oJson["retorno"]    := {}

    if cWhere == ""
        SetRestFault(400, EncodeUTF8("Parâmetros vazio."))
        Return .F.
    endif

   cWhere := "%" + cWhere + "%"

    BeginSql Alias "SE1TEMP"
        SELECT SE1.E1_FILIAL  as filial,
               SE1.E1_PREFIXO as prefixo,
               SE1.E1_NUM     as numero,
               SE1.E1_PARCELA as parcela,
               SE1.E1_TIPO    as tipo,
               SE1.E1_NATUREZ as natureza,
               SE1.E1_CLIENTE as cliente,
               SE1.E1_LOJA    as loja,
               SE1.E1_EMISSAO as dataEmissao,
               SE1.E1_VENCREA as vencimentoReal,
               SE1.E1_VALOR   as valor,
               SE1.E1_NOMCLI  as nomeCliente,
               SE1.R_E_C_N_O_  as recno,
               SE1.E1_LA      as flagLA
        FROM %Table:SE1% SE1
          WHERE SE1.%NotDel%
            %Exp:cWhere%
    EndSql

    SE1TEMP->(DbGoTop())

    aItems := {}
    while !SE1TEMP->(Eof())
        oItem := JsonObject():New()
        oItem["filial"]          := AllTrim(SE1TEMP->filial)
        oItem["prefixo"]         := AllTrim(SE1TEMP->prefixo)
        oItem["numero"]          := AllTrim(SE1TEMP->numero)
        oItem["parcela"]         := AllTrim(SE1TEMP->parcela)
        oItem["tipo"]            := AllTrim(SE1TEMP->tipo)
        oItem["natureza"]        := AllTrim(SE1TEMP->natureza)
        oItem["cliente"]         := AllTrim(SE1TEMP->cliente)
        oItem["loja"]            := AllTrim(SE1TEMP->loja)
        oItem["dataEmissao"]     := SE1TEMP->dataEmissao
        oItem["vencimentoReal"]  := SE1TEMP->vencimentoReal
        oItem["valor"]           := SE1TEMP->valor
        oItem["nomeCliente"]     := AllTrim(SE1TEMP->nomeCliente)
        oItem["recno"]           := SE1TEMP->recno
        oItem["flagLA"]          := SE1TEMP->flagLA
        aAdd(aItems, oItem)
        SE1TEMP->(DbSkip())
    enddo
    SE1TEMP->(DbCloseArea())

    oJson["items"] := aItems

    oRest:setResponse(oJson:toJSON())
    FwrestArea(aArea)
return
