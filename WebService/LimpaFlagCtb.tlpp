#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "protheus.ch"
#include "tbiconn.ch"
#include "topconn.ch"

// Declaração da namespace
Namespace ListaTitulosSE1

@Get("/ListaTitulos")
User function GetListTitulos()
    local oJson     := JsonObject():New() as object
    local aArea     := FwGetArea() as array
    local aTitulos  := {} as array
   // local cUsuario  := GetUserName()
    local jPath     as json
    local cWhere as character
    local cXfilial    as character
    local cPrefixo   as character
    local cNum       as character
    local cParcela   as character
    local cTipo      as character
    local cNaturez   as character
    local cCliente   as character
    local cLoja      as character
    local cEmissao   as character
    local cVencrea   as character
    local cValor     as character
    local cNomcli    as character

    jPath := oRest:getQueryRequest()
    // Inicializa variáveis dos parâmetros
    if jPath <> Nil
        if ValType(jPath["E1_FILIAL"]) == "C" .and. !Empty(jPath["E1_FILIAL"])
            cXfilial := jPath["E1_FILIAL"]
        endif
        if ValType(jPath["E1_PREFIXO"]) == "C" .and. !Empty(jPath["E1_PREFIXO"])
            cPrefixo := jPath["E1_PREFIXO"]
        endif
        if ValType(jPath["E1_NUM"]) == "C" .and. !Empty(jPath["E1_NUM"])
            cNum := jPath["E1_NUM"]
        endif
        if ValType(jPath["E1_PARCELA"]) == "C" .and. !Empty(jPath["E1_PARCELA"])
            cParcela := jPath["E1_PARCELA"]
        endif
        if ValType(jPath["E1_TIPO"]) == "C" .and. !Empty(jPath["E1_TIPO"])
            cTipo := jPath["E1_TIPO"]
        endif
        if ValType(jPath["E1_NATUREZ"]) == "C" .and. !Empty(jPath["E1_NATUREZ"])
            cNaturez := jPath["E1_NATUREZ"]
        endif
        if ValType(jPath["E1_CLIENTE"]) == "C" .and. !Empty(jPath["E1_CLIENTE"])
            cCliente := jPath["E1_CLIENTE"]
        endif
        if ValType(jPath["E1_LOJA"]) == "C" .and. !Empty(jPath["E1_LOJA"])
            cLoja := jPath["E1_LOJA"]
        endif
        if ValType(jPath["E1_EMISSAO"]) == "C" .and. !Empty(jPath["E1_EMISSAO"])
            cEmissao := jPath["E1_EMISSAO"]
        endif
        if ValType(jPath["E1_VENCREA"]) == "C" .and. !Empty(jPath["E1_VENCREA"])
            cVencrea := jPath["E1_VENCREA"]
        endif
        if ValType(jPath["E1_VALOR"]) == "C" .and. !Empty(jPath["E1_VALOR"])
            cValor := jPath["E1_VALOR"]
        endif
        if ValType(jPath["E1_NOMCLI"]) == "C" .and. !Empty(jPath["E1_NOMCLI"])
            cNomcli := jPath["E1_NOMCLI"]
        endif
    endif

    ConOut( "[ListaTitulos] INICIO DA ROTINA")

   // Filtros simples -- Filtro de busca dos títulos
    if !Empty(cXfilial)
        cWhere += "AND SE1.E1_FILIAL = " + ValToSql(cXfilial) + ""
    endif
    if !Empty(cNum)
        cWhere += " AND SE1.E1_NUM = " + ValToSql(cNum) + ""
    endif
    if !Empty(cCliente)
        cWhere += " AND SE1.E1_CLIENTE = " + ValToSql(cCliente) + ""
    endif
    if !Empty(cEmissao)
        cWhere += " AND SE1.E1_EMISSAO >= " + ValToSql(cEmissao) + ""
    endif
    if !Empty(cVencrea)
        cWhere += " AND SE1.E1_VENCREA <= " + ValToSql(cVencrea) + ""
    endif
    if !Empty(cPrefixo)
        cWhere += " AND SE1.E1_PREFIXO = " + ValToSql(cPrefixo) + ""
    endif
    if !Empty(cTipo)
        cWhere += " AND SE1.E1_TIPO = " + ValToSql(cTipo) + ""
    endif
    if !Empty(cParcela)
        cWhere += " AND SE1.E1_PARCELA = " + ValToSql(cParcela) + ""
    endif
    if !Empty(cLoja)
        cWhere += " AND SE1.E1_LOJA = " + ValToSql(cLoja) + ""
    endif
    if !Empty(cNaturez)
        cWhere += " AND SE1.E1_NATUREZ = " + ValToSql(cNaturez) + ""
    endif
    if !Empty(cNomcli)
        cWhere += " AND SE1.E1_NOMCLI LIKE " + AllTrim(cNomcli) + ""
    endif
    if !Empty(cValor)
        cWhere += " AND SE1.E1_VALOR = " + ValToSql(cValor) + ""
    endif

    oJson["retorno"]    := {}

    if cWhere == ""
        SetRestFault(400, EncodeUTF8("Parâmetros vazio."))
        Return .F.
    endif

   cWhere := "%" + cWhere + "%"

    BeginSql Alias "SE1TEMP"
        SELECT SE1.E1_FILIAL  as filial,
               SE1.E1_PREFIXO as prefixo,
               SE1.E1_NUM     as num,
               SE1.E1_PARCELA as parcela,
               SE1.E1_TIPO    as tipo,
               SE1.E1_NATUREZ as naturez,
               SE1.E1_CLIENTE as cliente,
               SE1.E1_LOJA    as loja,
               SE1.E1_EMISSAO as emissao,
               SE1.E1_VENCREA as vencrea,
               SE1.E1_VALOR   as valor,
               SE1.E1_NOMCLI  as nomcli
        FROM %Table:SE1% SE1
          WHERE SE1.%NotDel%
            %Exp:cWhere%
    EndSql

    SE1TEMP->(DbGoTop())
    if !SE1TEMP->(Eof())
        oItem := JsonObject():New()
        oItem["filial"]   := AllTrim(SE1TEMP->filial)
        oItem["prefixo"]  := AllTrim(SE1TEMP->prefixo)
        oItem["num"]      := AllTrim(SE1TEMP->num)
        oItem["parcela"]  := AllTrim(SE1TEMP->parcela)
        oItem["tipo"]     := AllTrim(SE1TEMP->tipo)
        oItem["naturez"]  := AllTrim(SE1TEMP->naturez)
        oItem["cliente"]  := AllTrim(SE1TEMP->cliente)
        oItem["loja"]     := AllTrim(SE1TEMP->loja)
        oItem["emissao"]  := SE1TEMP->emissao
        oItem["vencrea"]  := SE1TEMP->vencrea
        oItem["valor"]    := SE1TEMP->valor
        oItem["nomcli"]   := AllTrim(SE1TEMP->nomcli)

        oJson["retorno"] := oItem

        ConOut("[ListaTitulos] Retorno: " + oJson:toJSON())
        SE1TEMP->(DbSkip())
    endif
    SE1TEMP->(DbCloseArea())

    conout("[ListaTitulos] Retorno: " + oJson:toJSON())

    oJson["items"]   := aTitulos
    oJson["hasNext"] := .F.
    oRest:setResponse(oJson:toJSON())
    FwrestArea(aArea)
return
